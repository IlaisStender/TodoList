{"version":3,"file":"0.bundle.js","sources":["webpack:///./src/todolistitem.ts","webpack:///./icons/deletesvg.svg"],"sourcesContent":["let deletesvg = require('../icons/deletesvg.svg');\n\nimport ItodoItemType from './ItodoItemType';\n\nexport default class TodoListItem {\n\n  elem: ItodoItemType;\n  todoList: HTMLUListElement;\n  //  parentContainer: HTMLElement;\n  elemLi: HTMLLIElement;\n  checkboxElem: HTMLInputElement;\n  inputElem: HTMLInputElement;\n  deleteButton: HTMLButtonElement;\n  deleteItemEvent: CustomEvent;\n  updateItemEvent: CustomEvent;\n\n  constructor(todoList: HTMLUListElement, elem: ItodoItemType) {\n    this.elem = elem;\n    this.todoList = todoList;\n    //  this.parentContainer = todoListContainer;\n    this.itemCustomEvent();\n    this.createEntry();\n    this.removeItemEvent();\n    //  this.inputUpdateEvent();\n    //   this.checkboxUpdateEvent();\n    this.checkHandler = this.checkHandler.bind(this);\n    this.inputHandler = this.inputHandler.bind(this);\n    //this.onRemove = this.onRemove.bind(this); \n    this.createEntryEvents();\n    this.isDone();\n  }\n  itemCustomEvent() {\n    this.deleteItemEvent = new CustomEvent('deleteItem', {\n      detail: { id: this.elem.id },\n    });\n    this.updateItemEvent = new CustomEvent('updateItem', {\n      detail: {},\n    });\n  }\n\n  createEntry() {\n    this.elemLi = this.createElemLi();\n    this.checkboxElem = this.createElemCheckbox(this.elem);\n    this.deleteButton = this.createElemDeleteButton();\n    this.inputElem = this.createElemInput(this.elem);\n    this.elemLi.appendChild(this.checkboxElem);\n    this.elemLi.appendChild(this.inputElem);\n    this.elemLi.appendChild(this.deleteButton);\n    this.todoList.appendChild(this.elemLi);\n  }\n\n  createElemLi(): HTMLLIElement {\n    let elemLiItem = document.createElement('li');\n    elemLiItem.className = 'list-item ';\n    return elemLiItem;\n  }\n\n  createElemCheckbox(elem: ItodoItemType): HTMLInputElement {\n    let checkItemDiv: HTMLElement = document.createElement('div');\n    checkItemDiv.className = 'item-input';\n    let elemCheckboxItem = document.createElement('input');\n    elemCheckboxItem.className = 'item-checkbox';\n    elemCheckboxItem.type = 'checkbox';\n    checkItemDiv.appendChild(elemCheckboxItem);\n    elemCheckboxItem.id = `todo${elem.id}`;\n    elemCheckboxItem.checked = elem.done;\n    return elemCheckboxItem;\n  }\n\n  createElemDeleteButton(): HTMLButtonElement {\n    let elemDeleteDiv: HTMLElement = document.createElement('div');\n    elemDeleteDiv.className = 'item-buttonn';\n    let elemDeleteButton = document.createElement('button');\n    elemDeleteButton.type = 'button';\n    elemDeleteButton.className = 'item-delete';\n    elemDeleteButton.innerHTML = `<img src=\"${deletesvg}\" alt= \"delete icon\" > `;\n    elemDeleteDiv.appendChild(elemDeleteButton);\n    return elemDeleteButton;\n  }\n  createElemInput(elem: ItodoItemType): HTMLInputElement {\n    let elemInputDiv: HTMLElement = document.createElement('div');\n    elemInputDiv.className = 'item-text';\n    let elemInput = document.createElement('input');\n    elemInput.className = 'item-input--tag';\n    elemInput.type = 'text';\n    elemInput.value = elem.title;\n    return elemInput;\n  }\n  deleteItem() {\n    this.elemLi.remove();\n  }\n\n  createEntryEvents() {\n    this.checkboxElem.addEventListener('change', this.checkHandler);\n    this.inputElem.addEventListener('change', this.inputHandler);\n  }\n  checkHandler(e) {\n    this.updateItemEvent.detail.elem = Object.assign({}, this.elem, { done: this.checkboxElem.checked });\n    this.isDone();\n    this.todoList.dispatchEvent(this.updateItemEvent);\n  }\n  inputHandler(e) {\n    this.updateItemEvent.detail.elem = Object.assign({}, this.elem, { title: this.inputElem.value });\n    this.todoList.dispatchEvent(this.updateItemEvent);\n  }\n\n  isDone() {\n    if (this.checkboxElem.checked) {\n      this.inputElem.classList.add('task-isDone');\n    } else {\n      this.inputElem.classList.remove('task-isDone');\n    }\n  }\n  removeItemEvent() {\n    this.deleteButton.addEventListener('click', () => {\n      this.todoList.dispatchEvent(this.deleteItemEvent);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/todolistitem.ts","module.exports = __webpack_public_path__ + \"e60f38e74c9d61ddff9d840dd9ce10fb.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./icons/deletesvg.svg\n// module id = 3\n// module chunks = 0 2"],"mappings":";;;;;;;AAAA;AAIA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;ACtHA;;;A","sourceRoot":""}