{"version":3,"file":"listItem.bundle.js","sources":["webpack:///webpack/bootstrap ed4c6ef104691603a0ff","webpack:///./src/todolistitem.ts","webpack:///./icons/deletesvg.svg"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ed4c6ef104691603a0ff","let deletesvg = require('../icons/deletesvg.svg');\n\nimport ItodoItemType from './ItodoItemType';\n\nexport default class TodoListItem {\n\n  elem: ItodoItemType;\n  todoList: HTMLUListElement;\n  //  parentContainer: HTMLElement;\n  elemLi: HTMLLIElement;\n  checkboxElem: HTMLInputElement;\n  inputElem: HTMLInputElement;\n  deleteButton: HTMLButtonElement;\n  deleteItemEvent: CustomEvent;\n  updateItemEvent: CustomEvent;\n\n  constructor(todoList: HTMLUListElement, elem: ItodoItemType) {\n    this.elem = elem;\n    this.todoList = todoList;\n    //  this.parentContainer = todoListContainer;\n    this.itemCustomEvent();\n    this.createEntry();\n    this.removeItemEvent();\n    this.inputUpdateEvent();\n    //   this.checkboxUpdateEvent();\n    this.checkHandler = this.checkHandler.bind(this);\n    //this.onRemove = this.onRemove.bind(this); \n    this.createEntryEvents();\n    this.isDone();\n  }\n  itemCustomEvent() {\n    this.deleteItemEvent = new CustomEvent('deleteItem', {\n      detail: { id: this.elem.id },\n    });\n    this.updateItemEvent = new CustomEvent('updateItem', {\n      detail: {},\n    });\n  }\n\n  createEntry() {\n    this.elemLi = this.createElemLi();\n    this.checkboxElem = this.createElemCheckbox(this.elem);\n    this.deleteButton = this.createElemDeleteButton();\n    this.inputElem = this.createElemInput(this.elem);\n    this.elemLi.appendChild(this.checkboxElem);\n    this.elemLi.appendChild(this.inputElem);\n    this.elemLi.appendChild(this.deleteButton);\n    this.todoList.appendChild(this.elemLi);\n  }\n\n  createElemLi(): HTMLLIElement {\n    let elemLiItem = document.createElement('li');\n    elemLiItem.className = 'list-item ';\n    return elemLiItem;\n  }\n\n  createElemCheckbox(elem: ItodoItemType): HTMLInputElement {\n    let checkItemDiv: HTMLElement = document.createElement('div');\n    checkItemDiv.className = 'item-input';\n    let elemCheckboxItem = document.createElement('input');\n    elemCheckboxItem.className = 'item-checkbox';\n    elemCheckboxItem.type = 'checkbox';\n    checkItemDiv.appendChild(elemCheckboxItem);\n    elemCheckboxItem.id = `todo${elem.id}`;\n    elemCheckboxItem.checked = elem.done;\n    return elemCheckboxItem;\n  }\n\n  createElemDeleteButton(): HTMLButtonElement {\n    let elemDeleteDiv: HTMLElement = document.createElement('div');\n    elemDeleteDiv.className = 'item-buttonn';\n    let elemDeleteButton = document.createElement('button');\n    elemDeleteButton.type = 'button';\n    elemDeleteButton.className = 'item-delete';\n    elemDeleteButton.innerHTML = `<img src=\"${deletesvg}\" alt= \"delete icon\" > `;\n    elemDeleteDiv.appendChild(elemDeleteButton);\n    return elemDeleteButton;\n  }\n  createElemInput(elem: ItodoItemType): HTMLInputElement {\n    let elemInputDiv: HTMLElement = document.createElement('div');\n    elemInputDiv.className = 'item-text';\n    let elemInput = document.createElement('input');\n    elemInput.className = 'item-input--tag';\n    elemInput.type = 'text';\n    elemInput.value = elem.title;\n    return elemInput;\n  }\n  deleteItem() {\n    this.elemLi.remove();\n  }\n  inputUpdateEvent() {\n    this.inputElem.addEventListener('change', () => {\n      this.updateItemEvent.detail.elem = Object.assign({}, this.elem, { title: this.inputElem.value });\n      this.todoList.dispatchEvent(this.updateItemEvent);\n    });\n  }\n  /*  checkboxUpdateEvent() {\n      this.checkboxElem.addEventListener('change', () => {\n        this.updateItemEvent.detail.elem = Object.assign({}, this.elem, { done: this.checkboxElem.checked });\n        this.isDone();\n        this.todoList.dispatchEvent(this.updateItemEvent);\n      });\n    } */\n\n\n  createEntryEvents() {\n    this.checkboxElem.addEventListener('change', this.checkHandler);\n  }\n  checkHandler(e) {\n    const elem = e.target;\n    this.updateItemEvent.detail.elem = Object.assign({}, this.elem, { done: this.checkboxElem.checked });\n    this.isDone();\n    this.todoList.dispatchEvent(this.updateItemEvent);\n  }\n\n  isDone() {\n    if (this.checkboxElem.checked) {\n      this.inputElem.classList.add('task-isDone');\n    } else {\n      this.inputElem.classList.remove('task-isDone');\n    }\n  }\n  removeItemEvent() {\n    this.deleteButton.addEventListener('click', () => {\n      this.todoList.dispatchEvent(this.deleteItemEvent);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/todolistitem.ts","module.exports = __webpack_public_path__ + \"e60f38e74c9d61ddff9d840dd9ce10fb.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./icons/deletesvg.svg\n// module id = 3\n// module chunks = 0 2"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;;AC7DA;AAIA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;AC/HA;;;A","sourceRoot":""}